# Project Name
PROJECT = task

# Directories
DIR = /home/arieh/git/ds
DBG_OBJ_DIR = $(DIR)/bin/debug
REL_OBJ_DIR = $(DIR)/bin/release
HDR_DIR = $(DIR)/include
SRC_DIR =  $(DIR)/src
# UID project directories
UID_DIR = /home/arieh/git/system_programing
UID_HDR_DIR = $(UID_DIR)/include

# Compiler
CC = gcc
CFLAGS = -ansi -pedantic-errors -Wall -Wextra -I$(HDR_DIR) -I$(UID_HDR_DIR)
DBG_FLAGS = -g
REL_FLAGS = -O3

# Source files
SRC_FILE = $(SRC_DIR)/$(PROJECT).c
# Header files
HDR_FILES = $(HDR_DIR)/$(PROJECT).h

# Object files for debug and release
DBG_SRC_OBJ = $(DBG_OBJ_DIR)/$(PROJECT).o
REL_SRC_OBJ = $(REL_OBJ_DIR)/$(PROJECT).o

# Default target
all: debug 

# Debug target
debug: $(DBG_OBJ_DIR)/lib_$(PROJECT).a

$(DBG_OBJ_DIR)/lib_$(PROJECT).a: $(DBG_SRC_OBJ)
	@ ar rcs $@ $^

$(DBG_SRC_OBJ): $(SRC_FILE) $(HDR_FILES)
	@ $(CC) $(CFLAGS) $(DBG_FLAGS) -c $< -o $@

# Release target
release: $(REL_OBJ_DIR)/lib_$(PROJECT).a

$(REL_OBJ_DIR)/lib_$(PROJECT).a: $(REL_SRC_OBJ)
	@ ar rcs $@ $^

$(REL_SRC_OBJ): $(SRC_FILE) $(HDR_FILES)
	@ $(CC) $(CFLAGS) $(REL_FLAGS) -c $< -o $@

# Clean
.PHONY: clean
clean:
	@  rm -f $(DBG_OBJ_DIR)/*$(PROJECT)* $(REL_OBJ_DIR)/*$(PROJECT)*\
	   $(PROJECT)*.out 

open:
	@ find . -type f -name "$(PROJECT)*.c" -exec gedit {} +&
	@ find . -type f -name "$(PROJECT)*.h" -exec gedit {} +&
